name: Run Spring Boot app in Docker and API tests

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  run-tests:
    runs-on: ubuntu-latest

    services:
      db:
        image: postgres:13
        env:
          POSTGRES_USER: appuser
          POSTGRES_PASSWORD: appuser123$
          POSTGRES_DB: appdb
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout API tests repository
        uses: actions/checkout@v3

      - name: Checkout Spring Boot app repository
        uses: actions/checkout@v3
        with:
          repository: aceton41k/spring-boot-app
          path: app

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker image for Spring Boot app
        run: |
          docker build -t spring-boot-app:latest ./app
          
      - name: Run Spring Boot app container
        run: |
          docker run -d -p 8080:8080 \
            --name app-container \
            --env SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/appdb \
            --env SPRING_DATASOURCE_USERNAME=appuser \
            --env SPRING_DATASOURCE_PASSWORD=appuser123$ \
            your-docker-image-name:latest
          
      - name: Wait for app to be ready
        run: |
          until curl --fail http://localhost:8080/actuator/health; do
            echo "Waiting for app to be ready..."
            sleep 5
          done

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Set up Gradle
        uses: gradle/gradle-build-action@v2

      - name: Run API tests
        run: ./gradlew test
