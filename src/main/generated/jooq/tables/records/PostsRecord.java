/*
 * This file is generated by jOOQ.
 */
package jooq.tables.records;


import java.time.LocalDateTime;

import jooq.tables.Posts;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class PostsRecord extends UpdatableRecordImpl<PostsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.posts.id</code>.
     */
    public PostsRecord setId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.posts.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.posts.title</code>.
     */
    public PostsRecord setTitle(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.posts.title</code>.
     */
    public String getTitle() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.posts.message</code>.
     */
    public PostsRecord setMessage(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.posts.message</code>.
     */
    public String getMessage() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.posts.created_at</code>.
     */
    public PostsRecord setCreatedAt(LocalDateTime value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.posts.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(3);
    }

    /**
     * Setter for <code>public.posts.updated_at</code>.
     */
    public PostsRecord setUpdatedAt(LocalDateTime value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.posts.updated_at</code>.
     */
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(4);
    }

    /**
     * Setter for <code>public.posts.created_by</code>.
     */
    public PostsRecord setCreatedBy(Long value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>public.posts.created_by</code>.
     */
    public Long getCreatedBy() {
        return (Long) get(5);
    }

    /**
     * Setter for <code>public.posts.modified_by</code>.
     */
    public PostsRecord setModifiedBy(Long value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>public.posts.modified_by</code>.
     */
    public Long getModifiedBy() {
        return (Long) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PostsRecord
     */
    public PostsRecord() {
        super(Posts.POSTS);
    }

    /**
     * Create a detached, initialised PostsRecord
     */
    public PostsRecord(Long id, String title, String message, LocalDateTime createdAt, LocalDateTime updatedAt, Long createdBy, Long modifiedBy) {
        super(Posts.POSTS);

        setId(id);
        setTitle(title);
        setMessage(message);
        setCreatedAt(createdAt);
        setUpdatedAt(updatedAt);
        setCreatedBy(createdBy);
        setModifiedBy(modifiedBy);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised PostsRecord
     */
    public PostsRecord(jooq.tables.pojos.Posts value) {
        super(Posts.POSTS);

        if (value != null) {
            setId(value.getId());
            setTitle(value.getTitle());
            setMessage(value.getMessage());
            setCreatedAt(value.getCreatedAt());
            setUpdatedAt(value.getUpdatedAt());
            setCreatedBy(value.getCreatedBy());
            setModifiedBy(value.getModifiedBy());
            resetChangedOnNotNull();
        }
    }
}
